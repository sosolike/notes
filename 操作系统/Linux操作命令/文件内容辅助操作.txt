1：管道命令:|
    管道符号：进程1 | 进程2
    管道命令功能：
        将文件信息或者标准输出信息发送至管道之后的命令进行处理
    管道说明：
        1：管道命令是linux在shell层面提供的一种进程之间单向通信的机制；使用管道会将前一个进程的标准输出传递至管道后的进程；
        2：管道对于信息的传递是单向的，只能将前一个进程的输出信息传递至管道后的进程；
        3：进程将消息传递至管道之后即结束，不会再打印至标准输出；
        4：管道中的消息读取是一次性的，不可重复读取；
        5：管道的右边进程自身必须能够接收标准输入流的能力，才能够接收管道的内容；
        6：管道不传递前一个进程的标准错误信息，只传递标准输入信息；

2：重定向命令：> >> <
    >：将标准输出和标准错误内容重定向至其他存储设备(文件等)，将会覆盖目标文件原内容；
    >>：将标准输出和标准错误内容重定向至其他存储设备(文件等)，将会追加在原文件内容之后；
    <：将数据来源为标准输入修改成文件或者其他设备的输入；

3：文本搜索及处理：grep
    grep [-incovelLrd] [文件]
    功能：过滤grep接收到的文本信息或者查找文件中的内容，grep常用在管道命令之后，来过滤前一个进程向管道中输入的信息，或者按照内容查找文件；
    参数：
        i：忽略大小写
        n：显示结果所在行号
        c：只显示匹配到的行数
        o：只显示符合条件的字符串而非整行
        v：反向匹配选择
        e：使用多个选项来匹配，多个选项之间是or的关系；
        l：列出文件内容符合指定匹配样式的文件名称，而非匹配到的项
        L：列出文件内容不符合指定匹配样式的文件名称，而非没有匹配到的项
        r：递归搜索
        d：不搜索子目录
        B <行数>：除过显示匹配行以外，并显示匹配行之前的内容，总共显示B参数指定的行数；
        C <行数>：除过显示匹配行以外，并显示匹配行前后的内容，总共显示C参数指定的行数；

    grep常用的正则表达式：
        ^：锚定起始位置字符，如:'^abc'：要求必须以abc作为起始字符；
        $：锚定结束位置字符，如：'abc$'：要求必须以abc作为结束字符；
        .：表示任意一个非换行字符，即.表示一个非/n的字符；
        *：匹配0个或者多个任意字符；
        ()：表示将多个字符作为一个整体匹配；
        ?：表示匹配?之前的字符1次或者0次；
        +：表示匹配+号之前的项1次或者多次；
        *：表示匹配*号之前的项0次或者多次；
        {n}：表示匹配之前的字符n次；
        {n,}：表示匹配之前的字符至少n次；
        {n,m}：表示匹配之前的字符至少n次，至多m次；
        |：表示匹配|两边任意一边都可以；
        []：表示匹配[]内的任意一个字符均可；
        [^]：表示匹配除过[]内的任意一个字符均可，此时^表示反向选择的意思，表示除过[]中的所有字符；
        [1-9]：表示匹配1至9内的任意一个数字均可；
        \：表示将上述正则表达式的符号进行转义；
    posix字符类正则表达式：
        [:alnum:]：表示字母和数字字符
        [:alpha:]：表示字符(包括大小写)
        [:blank:]：表示空格与制表符
        [:digit:]：数字字符
        [:lower:]：小写字母
        [:upper:]：大写字母
        [:punct:]：表示标点符号
        [:space:]：表示换行符、回车符在内的所有空白字符
    元字符正则表达式：
        \b：单词字符
        \B：非单词字符
        \d：数字字符
        \D：非数字字符
        \w：单个单词字符
        \W：非单个单词字符
        \s：单个空白字符
        \S：单个非空白字符

4：文本内容数量统计：wc

